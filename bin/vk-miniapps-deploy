#!/usr/bin/env node
var chalk = require('chalk');
const fs = require('fs-extra');
const configFilePath = './vk-hosting-config.json';
const prompt = require('prompts');

async function run() {
  fs.pathExists(configFilePath).then((res) => {
    if (!res) {
      console.error(configFilePath + ' is missing');
      return false;
    }
  });

  const configJSON = require('require-module')(configFilePath);
  if (!configJSON) {
    console.error(configFilePath + ' is missing');
    return false;
  }

  const deploy = require('../index');
  const cfg = configJSON || {};

  if (cfg.debug) {
    console.log('\nDebug mode is enabled. It will log all client requests!\n');
  }

  let confirmation = {
    result: true,
  }

  if (!cfg.noprompt) {
    prompt.message = chalk.cyan("vk-mini-apps-deploy:");
    prompt.delimiter = chalk.green(" $ ");

    confirmation = await prompt({
      type: 'confirm',
      initial: true,
      name: 'result',
      message: chalk.yellow('Would you like to deploy to VK Mini Apps hosting using these commands?')
    });

    if (!confirmation.result) {
      process.exit();
    }

    const extraOptions = await getExtraOptions()
    cfg.update_prod = extraOptions.update_prod;
    cfg.update_dev = extraOptions.update_dev;

    if (extraOptions.update_test === true && extraOptions.test_group_name !== '') {
      cfg.test_group_name = extraOptions.test_group_name;
    }
  }

  const status = await deploy.run(cfg) ? 0 : 1;
  process.exit(status);
}

async function getExtraOptions() {
  const questions = [
    {
      type: 'confirm',
      initial: true,
      name: 'update_prod',
      message: chalk.yellow('Would you like to update prod urls?')
    },
    {
      type: 'confirm',
      initial: true,
      name: 'update_dev',
      message: chalk.yellow('Would you like to update dev urls?')
    },
    {
      type: 'confirm',
      initial: false,
      name: 'update_test',
      message: chalk.yellow('Would you like to update test group url?')
    },
    {
      type: prev => prev === true ? 'text' : null,
      name: 'test_group_name',
      message: chalk.yellow('Enter test group name:')
    }
  ];

  const extraOptions = await prompt(questions);

  if (extraOptions.update_prod === false && extraOptions.update_dev === false && extraOptions.update_test === false) {
    process.exit();
  }

  return extraOptions;
}
run().then(r => console.log(r));
